apply plugin: 'groovy'
compileGroovy {
    sourceCompatibility = 1.7
    targetCompatibility = 1.7
}
dependencies {
    implementation gradleApi()
    implementation localGroovy()
    implementation 'com.android.tools.build:gradle:7.1.2'
    implementation 'org.javassist:javassist:3.20.0-GA'
    implementation fileTree(dir: "./src/main/libs", include: ['*.jar'])
    implementation project(':autopatchbase')
//    compile 'com.meituan.robust:autopatchbase:0.4.93'
    implementation 'org.ow2.asm:asm:5.0.1'
}

apply from: '../gradle_mvn_push.gradle'

afterEvaluate {
    publishing {
        //发布的 jar 包配置
        publications {
            aar(MavenPublication) {
                groupId = GROUP
                artifactId = project.getArchivesBaseName()
                version = VERSION_NAME
                //aar 文件
                def projectName = project.getName()
                artifact "build/outputs/aar/${project.archivesBaseName}-release.aar"

                pom.withXml{
                    def dependenciesNode = asNode().appendNode("dependencies")
                    configurations.implementation.allDependencies.forEach(){
                        Dependency dependency ->
                            if (dependency.version != "unspecified" && dependency.name != "unspecified"){
                                def dependencyNode = dependenciesNode.appendNode('dependency')
                                dependencyNode.appendNode('groupId', dependency.group)
                                dependencyNode.appendNode('artifactId', dependency.name)
                                dependencyNode.appendNode('version', dependency.version)
                            }
                    }
                }

            }
        }
        //仓库地址配置
        repositories {
            maven {
                repositories {
                    maven {
                        url  "/.m2/repository"
                    }
                    maven {
                        url  "/.m2/repository"
                    }
                }

            }
        }
    }
}
